{"mappings":"AAAA,MAAMA,SAAWC,SAASC,eAAe,SACnCC,QAAU,uCAChB,IASIC,eACAC,gBAVAC,MAAQ,GACRC,SAAW,CACbC,KAAM,GACNC,SAAU,GACVC,QAAS,GACTC,MAAO,GACPC,QAAS,GACTC,MAAO,IAILC,aAAe,GACnB,MAAMC,YAAcd,SAASe,cAAc,sBACrCC,KAAOhB,SAASe,cAAc,cAC9BE,QAAUjB,SAASe,cAAc,aACjCG,OAASlB,SAASe,cAAc,0BAEvBI,WACb,MAAMC,EAAG,GAAMlB,gBACTmB,QAAiBC,MAAMF,GAC7B,GAAIC,EAASE,GACX,aAAaF,EAASG,sBAIXC,WACbP,OAAOQ,UAAUC,IAAI,eACrB,MAAMC,QAAaT,WACnBd,MAAQ,IAAIA,SAAUuB,GACtBC,YAAYxB,OACZa,OAAOQ,UAAUI,OAAO,wBAGjBD,YAAYE,GACnB,MA+BMC,EA/BcD,EAAKE,KAAG,EACvBC,GAAAA,EAAI3B,KAAAA,EAAMC,SAAAA,EAAUE,MAAAA,EAAOC,QAAAA,EAASC,MAAAA,KAC/B,sFAEgBL,oCACAC,yLAOSE,mJAIAC,iJAIAC,sIAIuBsB,oFACDA,yDAM9BC,KAAK,IAChCpC,SAASqC,UAAYJ,EAGvB,MAAMK,SAAQC,MAASJ,IACrB/B,eAAiB+B,EACjBpB,YAAYY,UAAUC,IAAI,QAC1BvB,gBAAkBC,MAAMkC,WAAUC,GAAMA,EAAGN,KAAOA,IAClD,MAAMO,EAAOpC,MAAMD,iBACnBS,aAAe4B,EACfC,OAAOC,KAAKF,GAAMG,SAAQC,IACZ,OAARA,GAAwB,YAARA,GAA6B,YAARA,IACvC7C,SAASC,eAAe4C,GAAKC,MAAQL,EAAKI,QAKhD,IAAI7B,KAAK+B,UACNd,KAAIe,GAAKA,EAAEzC,OACXqC,SAAQC,IACP7B,KAAK6B,GAAKI,iBAAiB,UAAUC,IACnCrC,aAAagC,GAAOK,EAAEC,OAAOL,YAInC7B,QAAQgC,iBAAiB,SAAOX,UAC9BpB,OAAOQ,UAAUC,IAAI,qBACfyB,oBACN/C,MAAMD,iBAAmBsC,OAAOW,OAAOhD,MAAMD,iBAAkBS,cAC/DgB,YAAYxB,OACZS,YAAYY,UAAUI,OAAO,QAC7BZ,OAAOQ,UAAUI,OAAO,kBAG1B,MAAMwB,WAAUhB,MAASJ,IACvBhB,OAAOQ,UAAUC,IAAI,qBACf4B,kBAAkBrB,GACxB7B,MAAMmD,OACJnD,MAAMkC,WAAUC,GAAMA,EAAGN,KAAOA,IAChC,GAEFL,YAAYxB,OACZa,OAAOQ,UAAUI,OAAO,yBAGjByB,kBAAkBrB,GACzB,OAAOZ,MAAK,GAAIpB,iBAAiBgC,IAAM,CACrCuB,OAAQ,SACRC,KAAMC,KAAKC,UAAU/C,yBAIhBuC,oBACP,OAAO9B,MAAK,GAAIpB,iBAAiBC,iBAAkB,CACjDsD,OAAQ,MACRC,KAAMC,KAAKC,UAAU/C,cACrBgD,QAAS,CACP,eAAgB,qCAGjBC,MAAKC,GAAOA,EAAIvC,SAChBsC,MAAKlC,GAAQA,IAGlBH","sources":["src/index.js"],"sourcesContent":["const userList = document.getElementById('users');\r\nconst API_URL = 'https://jsonplaceholder.typicode.com';\r\nlet users = [];\r\nlet formData = {\r\n  name: '',\r\n  username: '',\r\n  address: '',\r\n  phone: '',\r\n  website: '',\r\n  email: ''\r\n};\r\nlet editableCardId;\r\nlet editableUserIdx;\r\nlet updateValues = {};\r\nconst formWrapper = document.querySelector('.edit-form-wrapper');\r\nconst form = document.querySelector('.edit-form');\r\nconst editBtn = document.querySelector('.edit-btn');\r\nconst loader = document.querySelector('.loader');\r\n\r\nasync function getUsers() {\r\n  const url = `${API_URL}/users`;\r\n  const response = await fetch(url);\r\n  if (response.ok) {\r\n    return await response.json();\r\n  }\r\n}\r\n\r\nasync function startApp() {\r\n  loader.classList.add('show-loader');\r\n  const data = await getUsers();\r\n  users = [...users, ...data];\r\n  renderUsers(users);\r\n  loader.classList.remove('show-loader');\r\n}\r\n\r\nfunction renderUsers(list) {\r\n  const markupArray = list.map(\r\n    ({ id, name, username, phone, website, email }) => {\r\n      return `<li class=\"profile\">\r\n        <div class=\"description\">\r\n          <p class=\"name\">${name}</p>\r\n          <p class=\"tag\">@${username}</p>\r\n         \r\n        </div>\r\n\r\n        <ul class=\"contacts\">\r\n          <li class=\"statsElem\">\r\n            <span class=\"label\">phone</span>\r\n            <span class=\"quantity\">${phone}</span>\r\n          </li>\r\n          <li class=\"statsElem\">\r\n            <span class=\"label\">website</span>\r\n            <span class=\"quantity\">${website}</span>\r\n          </li>\r\n          <li class=\"statsElem\">\r\n            <span class=\"label\">email</span>\r\n            <span class=\"quantity\">${email}</span>\r\n          </li>\r\n        </ul>\r\n        <ul class=\"controls\">\r\n        <li ><button class=\"btn tomato\" onclick=\"editCard(${id})\">EDIT</button></li>\r\n        <li ><button class=\"btn red\" onclick=\"deleteCard(${id})\">DELETE</button></li>\r\n        </ul>\r\n      </li>`;\r\n    }\r\n  );\r\n\r\n  const markup = markupArray.join('');\r\n  userList.innerHTML = markup;\r\n}\r\n\r\nconst editCard = async id => {\r\n  editableCardId = id;\r\n  formWrapper.classList.add('show');\r\n  editableUserIdx = users.findIndex(el => el.id === id);\r\n  const user = users[editableUserIdx];\r\n  updateValues = user;\r\n  Object.keys(user).forEach(key => {\r\n    if (key !== 'id' && key !== 'company' && key !== 'address') {\r\n      document.getElementById(key).value = user[key];\r\n    }\r\n  });\r\n};\r\n\r\n[...form.elements]\r\n  .map(q => q.name)\r\n  .forEach(key => {\r\n    form[key].addEventListener('change', e => {\r\n      updateValues[key] = e.target.value;\r\n    });\r\n  });\r\n\r\neditBtn.addEventListener('click', async () => {\r\n  loader.classList.add('show-loader');\r\n  await updatePostRequest();\r\n  users[editableUserIdx] = Object.assign(users[editableUserIdx], updateValues);\r\n  renderUsers(users);\r\n  formWrapper.classList.remove('show');\r\n  loader.classList.remove('show-loader');\r\n});\r\n\r\nconst deleteCard = async id => {\r\n  loader.classList.add('show-loader');\r\n  await removeUserRequest(id);\r\n  users.splice(\r\n    users.findIndex(el => el.id === id),\r\n    1\r\n  );\r\n  renderUsers(users);\r\n  loader.classList.remove('show-loader');\r\n};\r\n\r\nfunction removeUserRequest(id) {\r\n  return fetch(`${API_URL}/users/${id}`, {\r\n    method: 'DELETE',\r\n    body: JSON.stringify(updateValues)\r\n  });\r\n}\r\n\r\nfunction updatePostRequest() {\r\n  return fetch(`${API_URL}/users/${editableCardId}`, {\r\n    method: 'PUT',\r\n    body: JSON.stringify(updateValues),\r\n    headers: {\r\n      'Content-type': 'application/json; charset=UTF-8'\r\n    }\r\n  })\r\n    .then(res => res.json())\r\n    .then(data => data);\r\n}\r\n\r\nstartApp();\r\n"],"names":["userList","document","getElementById","API_URL","editableCardId","editableUserIdx","users","formData","name","username","address","phone","website","email","updateValues","formWrapper","querySelector","form","editBtn","loader","getUsers","url","response","fetch","ok","json","startApp","classList","add","data","renderUsers","remove","list","markup","map","id","join","innerHTML","editCard","async","findIndex","el","user","Object","keys","forEach","key","value","elements","q","addEventListener","e","target","updatePostRequest","assign","deleteCard","removeUserRequest","splice","method","body","JSON","stringify","headers","then","res"],"version":3,"file":"index.0967200b.js.map"}