const userList=document.getElementById("users"),API_URL="https://jsonplaceholder.typicode.com";let editableCardId,editableUserIdx,users=[],formData={name:"",username:"",address:"",phone:"",website:"",email:""},updateValues={};const formWrapper=document.querySelector(".edit-form-wrapper"),form=document.querySelector(".edit-form"),editBtn=document.querySelector(".edit-btn"),loader=document.querySelector(".loader");async function getUsers(){const e=`${API_URL}/users`,s=await fetch(e);if(s.ok)return await s.json()}async function startApp(){loader.classList.add("show-loader");const e=await getUsers();users=[...users,...e],renderUsers(users),loader.classList.remove("show-loader")}function renderUsers(e){const s=e.map((({id:e,name:s,username:a,phone:t,website:n,email:r})=>`<li class="profile">\n        <div class="description">\n          <p class="name">${s}</p>\n          <p class="tag">@${a}</p>\n         \n        </div>\n\n        <ul class="contacts">\n          <li class="statsElem">\n            <span class="label">phone</span>\n            <span class="quantity">${t}</span>\n          </li>\n          <li class="statsElem">\n            <span class="label">website</span>\n            <span class="quantity">${n}</span>\n          </li>\n          <li class="statsElem">\n            <span class="label">email</span>\n            <span class="quantity">${r}</span>\n          </li>\n        </ul>\n        <ul class="controls">\n        <li ><button class="btn tomato" onclick="editCard(${e})">EDIT</button></li>\n        <li ><button class="btn red" onclick="deleteCard(${e})">DELETE</button></li>\n        </ul>\n      </li>`)).join("");userList.innerHTML=s}const editCard=async e=>{editableCardId=e,formWrapper.classList.add("show"),editableUserIdx=users.findIndex((s=>s.id===e));const s=users[editableUserIdx];updateValues=s,Object.keys(s).forEach((e=>{"id"!==e&&"company"!==e&&"address"!==e&&(document.getElementById(e).value=s[e])}))};[...form.elements].map((e=>e.name)).forEach((e=>{form[e].addEventListener("change",(s=>{updateValues[e]=s.target.value}))})),editBtn.addEventListener("click",(async()=>{loader.classList.add("show-loader"),await updatePostRequest(),users[editableUserIdx]=Object.assign(users[editableUserIdx],updateValues),renderUsers(users),formWrapper.classList.remove("show"),loader.classList.remove("show-loader")}));const deleteCard=async e=>{loader.classList.add("show-loader"),await removeUserRequest(e),users.splice(users.findIndex((s=>s.id===e)),1),renderUsers(users),loader.classList.remove("show-loader")};function removeUserRequest(e){return fetch(`${API_URL}/users/${e}`,{method:"DELETE",body:JSON.stringify(updateValues)})}function updatePostRequest(){return fetch(`${API_URL}/users/${editableCardId}`,{method:"PUT",body:JSON.stringify(updateValues),headers:{"Content-type":"application/json; charset=UTF-8"}}).then((e=>e.json())).then((e=>e))}startApp();
//# sourceMappingURL=index.0967200b.js.map
